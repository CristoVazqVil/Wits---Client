//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wits.WitsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/WitsClasses.Contracts")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CelebrationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HighestScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProfilePictureIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CelebrationId {
            get {
                return this.CelebrationIdField;
            }
            set {
                if ((this.CelebrationIdField.Equals(value) != true)) {
                    this.CelebrationIdField = value;
                    this.RaisePropertyChanged("CelebrationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HighestScore {
            get {
                return this.HighestScoreField;
            }
            set {
                if ((this.HighestScoreField.Equals(value) != true)) {
                    this.HighestScoreField = value;
                    this.RaisePropertyChanged("HighestScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProfilePictureId {
            get {
                return this.ProfilePictureIdField;
            }
            set {
                if ((this.ProfilePictureIdField.Equals(value) != true)) {
                    this.ProfilePictureIdField = value;
                    this.RaisePropertyChanged("ProfilePictureId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WitsService.IPlayerManager")]
    public interface IPlayerManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManager/AddPlayer", ReplyAction="http://tempuri.org/IPlayerManager/AddPlayerResponse")]
        int AddPlayer(Wits.WitsService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManager/AddPlayer", ReplyAction="http://tempuri.org/IPlayerManager/AddPlayerResponse")]
        System.Threading.Tasks.Task<int> AddPlayerAsync(Wits.WitsService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManager/GetPlayerByUser", ReplyAction="http://tempuri.org/IPlayerManager/GetPlayerByUserResponse")]
        Wits.WitsService.Player GetPlayerByUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManager/GetPlayerByUser", ReplyAction="http://tempuri.org/IPlayerManager/GetPlayerByUserResponse")]
        System.Threading.Tasks.Task<Wits.WitsService.Player> GetPlayerByUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManager/GetPlayerByUserAndPassword", ReplyAction="http://tempuri.org/IPlayerManager/GetPlayerByUserAndPasswordResponse")]
        Wits.WitsService.Player GetPlayerByUserAndPassword(string username, string userPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManager/GetPlayerByUserAndPassword", ReplyAction="http://tempuri.org/IPlayerManager/GetPlayerByUserAndPasswordResponse")]
        System.Threading.Tasks.Task<Wits.WitsService.Player> GetPlayerByUserAndPasswordAsync(string username, string userPassword);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlayerManagerChannel : Wits.WitsService.IPlayerManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlayerManagerClient : System.ServiceModel.ClientBase<Wits.WitsService.IPlayerManager>, Wits.WitsService.IPlayerManager {
        
        public PlayerManagerClient() {
        }
        
        public PlayerManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlayerManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddPlayer(Wits.WitsService.Player player) {
            return base.Channel.AddPlayer(player);
        }
        
        public System.Threading.Tasks.Task<int> AddPlayerAsync(Wits.WitsService.Player player) {
            return base.Channel.AddPlayerAsync(player);
        }
        
        public Wits.WitsService.Player GetPlayerByUser(string username) {
            return base.Channel.GetPlayerByUser(username);
        }
        
        public System.Threading.Tasks.Task<Wits.WitsService.Player> GetPlayerByUserAsync(string username) {
            return base.Channel.GetPlayerByUserAsync(username);
        }
        
        public Wits.WitsService.Player GetPlayerByUserAndPassword(string username, string userPassword) {
            return base.Channel.GetPlayerByUserAndPassword(username, userPassword);
        }
        
        public System.Threading.Tasks.Task<Wits.WitsService.Player> GetPlayerByUserAndPasswordAsync(string username, string userPassword) {
            return base.Channel.GetPlayerByUserAndPasswordAsync(username, userPassword);
        }
    }
}
