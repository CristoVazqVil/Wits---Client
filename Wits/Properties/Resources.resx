<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcceptRequest" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="AddOrBlockPlayer" xml:space="preserve">
    <value>Add Or Block Player</value>
  </data>
  <data name="AllMyFriends" xml:space="preserve">
    <value>All My Friends</value>
  </data>
  <data name="AlreadyBlockedPlayer" xml:space="preserve">
    <value>Already Blocked Player</value>
  </data>
  <data name="AlreadyBlockedPlayerMessage" xml:space="preserve">
    <value>The player is already blocked</value>
  </data>
  <data name="AlreadyLogged" xml:space="preserve">
    <value>Hey!, This player is already logged in</value>
  </data>
  <data name="BlockConfirmationMesssage" xml:space="preserve">
    <value>Are you sure you want to block this player?</value>
  </data>
  <data name="BlockedBeforeMessage" xml:space="preserve">
    <value>You blocked this player before</value>
  </data>
  <data name="BlockedBy" xml:space="preserve">
    <value>You Are Blocked</value>
  </data>
  <data name="BlockedByMessage" xml:space="preserve">
    <value>This player blocked you!</value>
  </data>
  <data name="BlockedPlayer" xml:space="preserve">
    <value>Blocked Player</value>
  </data>
  <data name="BlockPlayer" xml:space="preserve">
    <value>Block Player</value>
  </data>
  <data name="BlockPlayerMessage" xml:space="preserve">
    <value>That player is blocked now!</value>
  </data>
  <data name="Celebrations" xml:space="preserve">
    <value>Celebrations</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="ChangePasswordAdvice" xml:space="preserve">
    <value>- The password must have an uppercase letter, a lowercase letter, a number, a special character, at least 8 characters and can't be the same as your current password.</value>
  </data>
  <data name="ConfirmationEmailError" xml:space="preserve">
    <value>An error occurred while sending the confirmation email</value>
  </data>
  <data name="ConfirmationEmailSent" xml:space="preserve">
    <value>Confirmation Email sent!</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Confirm New Password:</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="CreateAccount" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreateTitle" xml:space="preserve">
    <value>Create Account</value>
  </data>
  <data name="CurrentPassword" xml:space="preserve">
    <value>Current Password:</value>
  </data>
  <data name="DeleteFriend" xml:space="preserve">
    <value>Delete Friend</value>
  </data>
  <data name="DeleteFriendConfirmationMessage" xml:space="preserve">
    <value>Are you sure you want to delete this friend?</value>
  </data>
  <data name="EmailAdvice" xml:space="preserve">
    <value>- The allowed email domains are: outlook.com, gmail.com, hotmail.com and estudiantes.uv.mx</value>
  </data>
  <data name="EmptyFields" xml:space="preserve">
    <value>There cannot be empty fields</value>
  </data>
  <data name="EnterAnswer" xml:space="preserve">
    <value>Enter your answer:</value>
  </data>
  <data name="EnterAValidAmount" xml:space="preserve">
    <value>Please enter a valid amount within your available chips.</value>
  </data>
  <data name="EnterEmail" xml:space="preserve">
    <value>Enter Email</value>
  </data>
  <data name="EnterGameId" xml:space="preserve">
    <value>Enter Game ID:</value>
  </data>
  <data name="EnterPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="EnterPlayerUser" xml:space="preserve">
    <value>Enter Player User:</value>
  </data>
  <data name="EnterUser" xml:space="preserve">
    <value>Enter User</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ExistingRequest" xml:space="preserve">
    <value>Existing Request or Friendship</value>
  </data>
  <data name="ExistingRequestMessage" xml:space="preserve">
    <value>There's a request already or this player is your friend...</value>
  </data>
  <data name="Expel" xml:space="preserve">
    <value>Expel</value>
  </data>
  <data name="ExpelConfirmation" xml:space="preserve">
    <value>Are you sure about expelling this player?</value>
  </data>
  <data name="Expelled" xml:space="preserve">
    <value>You were kicked out of the game</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>Failed</value>
  </data>
  <data name="FriendDeleted" xml:space="preserve">
    <value>Friend Deleted</value>
  </data>
  <data name="FriendDeletedMessage" xml:space="preserve">
    <value>This player is no longer your friend...</value>
  </data>
  <data name="FriendRequests" xml:space="preserve">
    <value>Friend Requests</value>
  </data>
  <data name="FriendsAndRequests" xml:space="preserve">
    <value>Friends And Requests</value>
  </data>
  <data name="GameDoesNotExist" xml:space="preserve">
    <value>There´s no game with the entered ID</value>
  </data>
  <data name="GetOneHere" xml:space="preserve">
    <value>Get one here!</value>
  </data>
  <data name="Go" xml:space="preserve">
    <value>Go!</value>
  </data>
  <data name="HighestScore" xml:space="preserve">
    <value>Your highest score:</value>
  </data>
  <data name="HowMuch" xml:space="preserve">
    <value>How much will you wager?</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Invalid email</value>
  </data>
  <data name="InvitationEmailError" xml:space="preserve">
    <value>An error occurred while sending the invitation email</value>
  </data>
  <data name="InvitationEmailSent" xml:space="preserve">
    <value>Invitation Email Sent!</value>
  </data>
  <data name="InviteFriend" xml:space="preserve">
    <value>Invite Friend</value>
  </data>
  <data name="JoinGame" xml:space="preserve">
    <value>Join Game</value>
  </data>
  <data name="Lobby" xml:space="preserve">
    <value>Lobby</value>
  </data>
  <data name="NewGame" xml:space="preserve">
    <value>New Game</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password:</value>
  </data>
  <data name="NoAccount" xml:space="preserve">
    <value>Don't have an account?</value>
  </data>
  <data name="NotCurrentPassword" xml:space="preserve">
    <value>Not you current password...</value>
  </data>
  <data name="NotExistingGame" xml:space="preserve">
    <value>Not Existing Game</value>
  </data>
  <data name="NotExistingGameMessage" xml:space="preserve">
    <value>The game is not available or has reached the maximum number of players.</value>
  </data>
  <data name="NotExistingPlayer" xml:space="preserve">
    <value>Not Existing Player</value>
  </data>
  <data name="NotExistingPlayerMessage" xml:space="preserve">
    <value>That player does not exist...</value>
  </data>
  <data name="OnlineFriends" xml:space="preserve">
    <value>Online Friends:</value>
  </data>
  <data name="PasswordAdvice" xml:space="preserve">
    <value>- The password must have an uppercase letter, a lowercase letter, a number, a special character and at least 8 characters.</value>
  </data>
  <data name="PasswordChanged" xml:space="preserve">
    <value>The password has been changed successfully!</value>
  </data>
  <data name="PasswordsUnmatch" xml:space="preserve">
    <value>Passwords don't match</value>
  </data>
  <data name="PlayAsGuest" xml:space="preserve">
    <value>Play as a guest</value>
  </data>
  <data name="PlayerExpelled" xml:space="preserve">
    <value>Player Expelled.</value>
  </data>
  <data name="PlayerInvitedMessage" xml:space="preserve">
    <value>The player was invited!</value>
  </data>
  <data name="PlayersInGame" xml:space="preserve">
    <value>Players:</value>
  </data>
  <data name="ProfilePics" xml:space="preserve">
    <value>Profile Pics</value>
  </data>
  <data name="RejectRequest" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="Remember" xml:space="preserve">
    <value>Remember:</value>
  </data>
  <data name="RequestSent" xml:space="preserve">
    <value>Request Sent</value>
  </data>
  <data name="RequestSentMessage" xml:space="preserve">
    <value>Friend Request Sent!</value>
  </data>
  <data name="Round" xml:space="preserve">
    <value>Round </value>
  </data>
  <data name="SamePassword" xml:space="preserve">
    <value>The new password cannot be the same as your current password.</value>
  </data>
  <data name="SendRequest" xml:space="preserve">
    <value>Send Request</value>
  </data>
  <data name="ServerProblem" xml:space="preserve">
    <value>Server Problem</value>
  </data>
  <data name="ServerProblemMessage" xml:space="preserve">
    <value>There's a server problem, Sorry!</value>
  </data>
  <data name="ServerUnavailable" xml:space="preserve">
    <value>Server is not available</value>
  </data>
  <data name="StartGame" xml:space="preserve">
    <value>Start Game</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="ThatIsYou" xml:space="preserve">
    <value>That's You</value>
  </data>
  <data name="ThatIsYouMessage" xml:space="preserve">
    <value>Hey, That's You!</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Wits And Wagers</value>
  </data>
  <data name="TypeHere" xml:space="preserve">
    <value>Type Here</value>
  </data>
  <data name="UserCreatedMessage" xml:space="preserve">
    <value>The user was succesfully created, welcome!</value>
  </data>
  <data name="UsernameUsedMessage" xml:space="preserve">
    <value>That username is already used, use another one</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning!</value>
  </data>
  <data name="WeakPassword" xml:space="preserve">
    <value>The password is too weak</value>
  </data>
  <data name="Wins" xml:space="preserve">
    <value>Wins</value>
  </data>
  <data name="WrongPassword" xml:space="preserve">
    <value>Incorrect user or password, try again!</value>
  </data>
  <data name="YouRight" xml:space="preserve">
    <value>You're right!</value>
  </data>
</root>